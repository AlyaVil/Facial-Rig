const MODEL_HEIGHT = 40;

var canvas;
var myFont;
var drawEdges = false;
var drawControls = true;
var controls = [];
var blendMeshes = {};

var meshes = {
	normal: null,
	hair: null,
	brows: null,
	eyes: null,
	iris: null,
	pupils: null,

	head_jawUp: null,
	head_jawDown: null,
	head_jawLeft: null,
	head_jawRight: null,

	head_L_mouthCornerUp: null,
	head_L_mouthCornerDown: null,
	head_L_mouthCornerIn: null,
	head_L_mouthCornerOut: null,

	head_R_mouthCornerUp: null,
	head_R_mouthCornerDown: null,
	head_R_mouthCornerIn: null,
	head_R_mouthCornerOut: null,

	head_L_upperLidUp: null,
	head_L_upperLidDown: null,

	head_R_upperLidUp: null,
	head_R_upperLidDown: null,

	head_L_lowerLidUp: null,
	head_L_lowerLidDown: null,

	head_R_lowerLidUp: null,
	head_R_lowerLidDown: null,

	head_L_browUp: null,
	head_L_browDown: null,
	head_L_browIn: null,
	head_L_browOut: null,

	brows_L_browUp: null,
	brows_L_browDown: null,
	brows_L_browIn: null,
	brows_L_browOut: null,

        head_R_browUp: null,
	head_R_browDown: null,
	head_R_browIn: null,
	head_R_browOut: null,

	brows_R_browUp: null,
	brows_R_browDown: null,
	brows_R_browIn: null,
	brows_R_browOut: null,

	head_L_cheeksUp: null,
	head_L_cheeksDown: null,
	head_L_cheeksIn: null,
	head_L_cheeksOut: null,

	head_R_cheeksUp: null,
	head_R_cheeksDown: null,
	head_R_cheeksIn: null,
	head_R_cheeksOut: null,

	head_upperLipsUp: null,
	head_upperLipsDown: null,
	head_upperLipsLeft: null,
	head_upperLipsRight: null,

	head_lowerLipsUp: null,
	head_lowerLipsDown: null,
	head_lowerLipsLeft: null,
	head_lowerLipsRight: null
};

function preload() {
	myFont = loadFont('Roboto-Black.ttf');
	
	// Procedurally load in obj files.
	for (let name in meshes) {
		meshes[name] = loadModel(name + '.obj');
	}
}

function setup() {
	canvas = createCanvas(windowWidth, windowHeight, WEBGL);
	
	ortho(-width / 2, width / 2, -height / 2, height / 2, 0, 1000);
	
	background(50);
	textFont(myFont);
	
	// Determine which meshes will be blending to targets.
	blendMeshes.normal = new BlendMesh(meshes.normal);
	blendMeshes.brows = new BlendMesh(meshes.brows);
	
	// Create controls that will drive the mesh.



	// Jaw control
	controls.push(
		new Control(
			45, 105, 15,
			[
				new TargetGroup(
					blendMeshes.normal, 
					meshes.head_jawUp, 
					meshes.head_jawDown, 
					meshes.head_jawLeft, 
					meshes.head_jawRight
				)
			]
		));
	
	// L corner mouth control
	controls.push(
		new Control(
			70, 65, 10,
			[
				new TargetGroup(
					blendMeshes.normal, 
					meshes.head_L_mouthCornerUp, 
					meshes.head_L_mouthCornerDown, 
					meshes.head_L_mouthCornerOut, 
					meshes.head_L_mouthCornerIn)
			]
		));
	
	// R corner mouth control
	controls.push(
		new Control(
			10, 65, 10,
			[
				new TargetGroup(
					blendMeshes.normal, 
					meshes.head_R_mouthCornerUp, 
					meshes.head_R_mouthCornerDown, 
					meshes.head_R_mouthCornerIn, 
					meshes.head_R_mouthCornerOut
				)
			]
		));
